worker_processes auto;
rtmp_auto_push on;
# daemon off; - removed to avoid conflict with base image

events {
    worker_connections 1024;
}

# RTMP configuration
rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        
        # Increase timeout for slow connections
        timeout 30s;
        
        # Enable ping/pong for connection health checks
        ping 3m;
        ping_timeout 30s;
        
        # Notify on connect/disconnect for better monitoring
        notify_method get;
        
        application live {
            live on;
            record off;
            
            # Improved security settings
            allow publish 127.0.0.1; # Only allow local publishing by default
            allow publish backend; # Allow publishing from Django backend
            deny publish all; # Deny all other publish attempts
            allow play all; # Allow anyone to view streams
            
            # Convert RTMP to HLS
            hls on;
            hls_path /tmp/hls;
            hls_fragment 3;
            hls_playlist_length 60;
            
            # Enhanced HLS settings
            hls_cleanup on;
            hls_nested on;
            hls_fragment_naming sequential;
            hls_fragment_slicing aligned; # Align fragments to keyframes
            hls_type live; # Optimize for live streaming
            
            # Multiple quality variants
            hls_variant _low bandwidth=800000 width=640 height=360;
            hls_variant _mid bandwidth=1200000 width=842 height=480;
            hls_variant _hi bandwidth=2400000 width=1280 height=720;
            hls_variant _source; # Original quality
            
            # Callbacks to Django backend
            on_connect http://backend:8000/api/stream/on_connect;
            on_publish http://backend:8000/api/stream/on_publish;
            on_publish_done http://backend:8000/api/stream/on_publish_done;
            on_play http://backend:8000/api/stream/on_play;
            on_done http://backend:8000/api/stream/on_done;
            
            # Enable exec_push for potential stream forwarding
            exec_push ffmpeg -i rtmp://localhost:1935/live/$name
                -c:v copy -c:a copy
                -f flv rtmp://localhost:1935/hls/$name;
        }
        
        # Separate application for HLS output
        application hls {
            live on;
            record off;
            allow publish 127.0.0.1;
            deny publish all;
            allow play all;
        }
    }
}

http {
    include mime.types;
    default_type application/octet-stream;
    
    # Optimize for streaming
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    server_tokens off;
    
    # Logging configuration
    log_format streaming '[$time_local] $remote_addr '
                        '$protocol $status $bytes_sent $bytes_received '
                        '$session_time "$upstream_addr" '
                        '"$request" "$http_referer" "$http_user_agent"';
    
    access_log /dev/stdout streaming;
    error_log /dev/stderr info;
    
    # CORS configuration
    map $http_origin $cors_origin_header {
        default "";
        "~^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$" "$http_origin";
        "~^https?://.*\.yourdomain\.com$" "$http_origin"; # Update with your domain
    }
    
    # Rate limiting settings
    limit_req_zone $binary_remote_addr zone=streaming:10m rate=10r/s;
    
    server {
        listen 8080;
        server_name localhost;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob:; connect-src *;" always;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' $cors_origin_header always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        
        # HLS stream location with improved caching
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            
            root /tmp;
            
            # Cache settings
            add_header Cache-Control "public, no-cache";
            add_header Access-Control-Allow-Origin '*' always;
            
            # Apply rate limiting
            limit_req zone=streaming burst=20 nodelay;
            
            # Improve directory listing
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
        }
        
        # Static web player
        location / {
            root /var/www/html;
            index index.html;
            try_files $uri $uri/ /index.html;
            
            # Cache static files
            location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                expires 1d;
                add_header Cache-Control "public, no-transform";
            }
        }
        
        # Enhanced health check endpoint
        location /health {
            access_log off;
            add_header Content-Type application/json;
            return 200 '{"status":"healthy","timestamp":$time_iso8601}';
        }
        
        # Stats endpoint (protected)
        location /stats {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
            # Add authentication in production
            allow 127.0.0.1;
            deny all;
        }
    }
} 